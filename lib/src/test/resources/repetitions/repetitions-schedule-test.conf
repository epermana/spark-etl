application {
  name = Repetitions Example
  batch.milliseconds = 1000
  spark.conf {
    spark.master = "local[*]"
    spark.driver.host = "localhost"
    spark.sql.catalogImplementation = "in-memory"
  }
}

steps {
  stream {
    input {
      type = "com.cloudera.labs.envelope.repetition.DummyStreamInput"
      perbatch = 10
    }
  }
  repeating {
    input {
      type = "com.cloudera.labs.envelope.repetition.DummyBatchInput"
      numrows = 10
    }
    repetitions {
      everyfive {
        type = "schedule"
        every = "5s"
        //cron = "0/15 * * * *"
      }
    }
  }
  out {
    dependencies = [stream, repeating]
    deriver {
      type = sql
      query.literal = "SELECT s.id as streamId, r.id as repeatingId FROM stream s RIGHT OUTER JOIN repeating r on s.id = r.id"
    }
    planner {
      type = append
    }
    output {
      type = "com.cloudera.labs.envelope.repetition.DummyBatchOutput"
    }
  }
}

//,
//{
//type = "hdfs"
//path = "hdfs:///path/to/triggerfile"
//trigger = "present"
////or "modified"
//}
